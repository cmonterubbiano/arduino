/* Example program for from IRLib â€“ an Arduino library for infrared encoding and decoding
 * Version 1.3   January 2014
 * Copyright 2014 by Chris Young http://cyborg5.com
 * Use serial port to send codes. For details on this project see
   http://tech.cyborg5.com/2013/05/30/irlib-tutorial-part-3-overview-sending-ir-codes/ 
 */
#include <IRLib.h>

IRsend My_Sender;
unsigned int Signal_0_0[] = {3496,1636,484,1228,484,1232,456,396,492,368,460,408,480,1232,460,404,488,372,484,1228,488,1228,484,372,460,1252,460,400,456,408,480,1232,488,1228,456,404,456,1260,460,1256,456,412,484,376,484,1232,484,372,456,404,456,1256,460,400,460,396,488,376,456,408,456,400,488,368,460,404,516,356,460,404,480,380,460,400,484,376,480,384,480,376,488,376,488,372,484,376,484,372,488,376,480,380,456,1256,488,372,484,384,460,396,508,360,508,360,480,1244,484,376,456,404,484,384,456,404,460,1256,484,1232,488,1228,484,368,488,372,456,408,484,380,484,372,492,372,488,372,484,376,484,372,488,1224,484,1228,484,384,456,404,484,384,456,404,484,372,456,408,480,380,460,404,484,1232,484,376,460,1252,488,1228,456,400,484,1232,484,1228,484,376,460,1260,484,372,488,372,480,384,456,408,460,404,456,400,484,376,456,408,484,376,484,372,484,380,480,384,484,376,480,388,480,380,488,372,456,404,460,404,480,376,456,404,488,380,480,380,484,380,484,372,488,376,484,380,456,404,460,400,484,372,488,376,484,376,456,408,484,372,488,372,464,396,484,376,480,380,484,376,484,380,480,384,484,380,456,400,456,404,484,380,480,384,480,384,456,400,484,372,484,380,484,1224,488,1224,484,1232,456,1256,452,408,488,372,456,412,456,404,484,16872,3604,1656,460,1252,456,1260,460,396,488,380,488,372,480,1236,460,396,484,380,484,1232,484,1228,460,400,456,1256,484,376,484,380,484,1228,480,1232,480,380,488,1232,480,1232,480,388,480,384,484,1224,460,400,484,376,508,1200,460,404,480,380,484,376,484,376,456,408,480,380,460,400,488,376,456,404,484,376,484,372,484,380,488,372,480,384,484,368,488,376,484,376,484,376,456,404,484,376,508,1212,456,400,484,376,488,372,484,376,456,408,480,1228,484,372,484,384,456,404,452,408,456,1256,456,1256,452,1260,480,380,456,408,484,372,460,400,484,376,512,364,480,376,484,384,484,376,480,1228,484,1228,480,384,484,372,456,404,456,404,484,372,460,400,488,376,480,380,456,1252,488,372,484,1228,484,1236,480,376,452,1264,480,1232,484,380,488,1228,456,404,484,376,460,400,456,408,484,372,460,404,484,376,480,376,480,384,452,404,456,408,484,380,480,384,456,416,480,384,484,400,456,376,484,380,512,360,484,384,480,380,484,376,484,380,460,404,480,404,436,404,456,400,484,376,456,404,480,384,448,436,428,408,484,380,480,380,480,400,460,376,456,436,428,408,460,404,456,404,456,400,456,436,432,428,456,388,456,436,456,384,452,404,456,404,456,428,460,1228,456,1256,480,1256,432,1284,456,380,456,404,456,408,456,408,480}; //AnalysIR Batch Export - RAW
int khz=38; //NB Change this default value as neccessary to the correct modulation frequency


int protocol;
long code;
int bits;
void setup() {
  Serial.begin(9600);
  //delay(2000);while(!Serial);//delay for Leonardo
}

long parseHex (void) {
  long Value=0; char C;delay(100);
  while (Serial.available()>0) {
     C= tolower(Serial.read());
     if ((C>='0')&&(C<='9'))
       C=C-'0';
     else
       if ((C>='a') && (C<='f'))
         C=C-'a'+10;
       else
         return Value;
     Value=  C+(Value<<4);
  };
  return Value;
}
void parseDelimiter () {
  char C;
  while(Serial.available()>0) {
    C=tolower(Serial.peek());
    if( (C>='0') && (C<='9') )return;
    if( (C>='a') && (C<='f') )return;
    C=Serial.read();//throwaway delimiters
    delay (5);
  }
}

void loop() {
  if (Serial.available ()>0) {
    /*
    protocol = Serial.parseInt (); parseDelimiter();
    code     = parseHex ();        parseDelimiter();
    bits     = Serial.parseInt (); parseDelimiter();
    Serial.print("Prot:");  Serial.print(protocol);
    Serial.print(" Code:"); Serial.print(code,HEX);
    Serial.print(" Bits:"); Serial.println(bits);
    My_Sender.send(IRTYPES(protocol), code, bits);   
    */
    

    My_Sender.IRsendRaw::send(Signal_0_0, sizeof(Signal_0_0)/sizeof(int), khz); //AnalysIR Batch Export (IRLib) - RAW
    
    delay(8000);
     // AnalysIR IR Protocol: MITSUBISHI288AC, Key:  
  }
}
