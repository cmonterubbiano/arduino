/*
  Simple example for receiving
  
  http://code.google.com/p/rc-switch/
*/

#include <RCSwitch.h>
#include <IRremote.h>

IRsend irsend;

//You could also try 36,40 & 56 frequencies as a test NORMAL = 38
int khz = 38; //NB Change this default value as neccessary to the correct modulation frequency

RCSwitch mySwitch = RCSwitch();

//char  nomeRicettore[] ="Condizionatore Sala";
//char  nomeRicettore[] ="Condizioantore Camera Sud";
//char  nomeRicettore[] ="Condizioantore Camera Nord";
//char  nomeRicettore[] ="Stufa Bagno";

// toshiba mio accensione
unsigned int segnaleIR_1[] = {4416, 4312, 544, 1604, 552, 1604, 568, 1584, 544, 1604, 544, 532, 548, 528, 572, 1580, 548, 528, 544, 532, 544, 532, 544, 532, 540, 560, 544, 1580, 572, 1584, 540, 532, 544, 1608, 572, 504, 544, 532, 544, 532, 544, 1608, 568, 508, 544, 532, 540, 1608, 544, 1608, 548, 1604, 568, 1584, 544, 1604, 544, 532, 572, 1580, 548, 1604, 568, 508, 568, 508, 544, 528, 548, 532, 540, 532, 548, 528, 548, 532, 568, 504, 544, 536, 564, 1584, 544, 532, 540, 1612, 544, 1608, 568, 508, 540, 536, 544, 528, 572, 504, 548, 528, 548, 528, 548, 1604, 568, 508, 568, 508, 544, 532, 572, 504, 540, 1608, 572, 1584, 540, 532, 544, 532, 544, 532, 544, 532, 540, 536, 540, 532, 548, 528, 548, 532, 568, 508, 568, 508, 540, 1608, 572, 504, 544, 532, 544, 532, 544, 1608, 568, 508, 544, 7428, 4360, 4340, 544, 1608, 568, 1584, 568, 1584, 540, 1608, 544, 532, 548, 528, 544, 1608, 544, 532, 544, 532, 544, 532, 540, 536, 540, 532, 548, 1608, 544, 1608, 564, 508, 572, 1580, 540, 536, 544, 528, 572, 508, 544, 1608, 540, 536, 540, 532, 572, 1580, 548, 1628, 544, 1584, 568, 1584, 540, 1612, 568, 504, 572, 1584, 564, 1608, 548, 504, 572, 504, 572, 504, 540, 536, 568, 504, 572, 508, 568, 508, 544, 532, 540, 536, 540, 1608, 544, 532, 544, 1608, 544, 1608, 544, 556, 520, 556, 520, 556, 544, 508, 540, 532, 544, 532, 544, 1636, 544, 532, 516, 532, 568, 532, 520, 532, 572, 1580, 540, 1612, 568, 504, 572, 504, 572, 508, 568, 508, 540, 536, 540, 532, 544, 532, 540, 564, 512, 536, 544, 528, 572, 1584, 544, 532, 564, 536, 544, 508, 540, 1608, 544, 532, 544};
unsigned int segnaleIR_2[] = {4416, 4312, 544, 1604, 552, 1604, 568, 1584, 544, 1604, 544, 532, 548, 528, 572, 1580, 548, 528, 544, 532, 544, 532, 544, 532, 540, 560, 544, 1580, 572, 1584, 540, 532, 544, 1608, 572, 504, 544, 532, 544, 532, 544, 1608, 568, 508, 544, 532, 540, 1608, 544, 1608, 548, 1604, 568, 1584, 544, 1604, 544, 532, 572, 1580, 548, 1604, 568, 508, 568, 508, 544, 528, 548, 532, 540, 532, 548, 528, 548, 532, 568, 504, 544, 536, 564, 1584, 544, 532, 540, 1612, 544, 1608, 568, 508, 540, 536, 544, 528, 572, 504, 548, 528, 548, 528, 548, 1604, 568, 508, 568, 508, 544, 532, 572, 504, 540, 1608, 572, 1584, 540, 532, 544, 532, 544, 532, 544, 532, 540, 536, 540, 532, 548, 528, 548, 532, 568, 508, 568, 508, 540, 1608, 572, 504, 544, 532, 544, 532, 544, 1608, 568, 508, 544, 7428, 4360, 4340, 544, 1608, 568, 1584, 568, 1584, 540, 1608, 544, 532, 548, 528, 544, 1608, 544, 532, 544, 532, 544, 532, 540, 536, 540, 532, 548, 1608, 544, 1608, 564, 508, 572, 1580, 540, 536, 544, 528, 572, 508, 544, 1608, 540, 536, 540, 532, 572, 1580, 548, 1628, 544, 1584, 568, 1584, 540, 1612, 568, 504, 572, 1584, 564, 1608, 548, 504, 572, 504, 572, 504, 540, 536, 568, 504, 572, 508, 568, 508, 544, 532, 540, 536, 540, 1608, 544, 532, 544, 1608, 544, 1608, 544, 556, 520, 556, 520, 556, 544, 508, 540, 532, 544, 532, 544, 1636, 544, 532, 516, 532, 568, 532, 520, 532, 572, 1580, 540, 1612, 568, 504, 572, 504, 572, 508, 568, 508, 540, 536, 540, 532, 544, 532, 540, 564, 512, 536, 544, 528, 572, 1584, 544, 532, 564, 536, 544, 508, 540, 1608, 544, 532, 544};
unsigned int segnaleIR_3[] = {4416, 4312, 544, 1604, 552, 1604, 568, 1584, 544, 1604, 544, 532, 548, 528, 572, 1580, 548, 528, 544, 532, 544, 532, 544, 532, 540, 560, 544, 1580, 572, 1584, 540, 532, 544, 1608, 572, 504, 544, 532, 544, 532, 544, 1608, 568, 508, 544, 532, 540, 1608, 544, 1608, 548, 1604, 568, 1584, 544, 1604, 544, 532, 572, 1580, 548, 1604, 568, 508, 568, 508, 544, 528, 548, 532, 540, 532, 548, 528, 548, 532, 568, 504, 544, 536, 564, 1584, 544, 532, 540, 1612, 544, 1608, 568, 508, 540, 536, 544, 528, 572, 504, 548, 528, 548, 528, 548, 1604, 568, 508, 568, 508, 544, 532, 572, 504, 540, 1608, 572, 1584, 540, 532, 544, 532, 544, 532, 544, 532, 540, 536, 540, 532, 548, 528, 548, 532, 568, 508, 568, 508, 540, 1608, 572, 504, 544, 532, 544, 532, 544, 1608, 568, 508, 544, 7428, 4360, 4340, 544, 1608, 568, 1584, 568, 1584, 540, 1608, 544, 532, 548, 528, 544, 1608, 544, 532, 544, 532, 544, 532, 540, 536, 540, 532, 548, 1608, 544, 1608, 564, 508, 572, 1580, 540, 536, 544, 528, 572, 508, 544, 1608, 540, 536, 540, 532, 572, 1580, 548, 1628, 544, 1584, 568, 1584, 540, 1612, 568, 504, 572, 1584, 564, 1608, 548, 504, 572, 504, 572, 504, 540, 536, 568, 504, 572, 508, 568, 508, 544, 532, 540, 536, 540, 1608, 544, 532, 544, 1608, 544, 1608, 544, 556, 520, 556, 520, 556, 544, 508, 540, 532, 544, 532, 544, 1636, 544, 532, 516, 532, 568, 532, 520, 532, 572, 1580, 540, 1612, 568, 504, 572, 504, 572, 508, 568, 508, 540, 536, 540, 532, 544, 532, 540, 564, 512, 536, 544, 528, 572, 1584, 544, 532, 564, 536, 544, 508, 540, 1608, 544, 532, 544};
//toshiba spegnimento
unsigned int segnaleIR_4[] = {4388, 4340, 544, 1604, 572, 1580, 572, 1580, 544, 1608, 568, 508, 544, 532, 544, 1604, 572, 508, 544, 532, 540, 532, 568, 508, 544, 532, 572, 1580, 548, 1604, 544, 532, 544, 1604, 572, 504, 544, 532, 572, 504, 572, 1580, 568, 508, 568, 508, 544, 1604, 576, 1576, 572, 1584, 544, 1604, 544, 1608, 544, 532, 572, 1576, 548, 1608, 544, 532, 564, 508, 572, 504, 544, 532, 572, 504, 548, 524, 548, 532, 544, 532, 544, 532, 568, 1580, 544, 532, 572, 1584, 540, 1608, 544, 532, 572, 504, 572, 504, 568, 504, 572, 508, 568, 508, 568, 1580, 572, 504, 572, 504, 572, 504, 572, 1604, 544, 1584, 572, 1608, 512, 532, 548, 532, 544, 532, 544, 532, 540, 532, 544, 532, 572, 504, 544, 532, 548, 528, 544, 532, 544, 1608, 568, 508, 540, 536, 568, 1580, 572, 1580, 548, 532, 540, 7428, 4364, 4340, 540, 1636, 544, 1580, 548, 1600, 572, 1584, 544, 532, 540, 536, 540, 1608, 572, 504, 572, 532, 516, 536, 564, 508, 568, 508, 572, 1580, 544, 1604, 572, 504, 548, 1608, 540, 536, 540, 556, 544, 508, 544, 1608, 540, 532, 548, 528, 548, 1632, 520, 1608, 568, 1580, 544, 1608, 544, 1608, 568, 508, 544, 1608, 568, 1580, 548, 528, 548, 532, 564, 512, 540, 556, 520, 532, 544, 532, 544, 528, 572, 504, 572, 508, 544, 1608, 540, 532, 544, 1608, 544, 1608, 572, 508, 540, 532, 568, 508, 544, 532, 596, 480, 572, 504, 540, 1608, 572, 504, 572, 508, 544, 532, 564, 1584, 544, 1608, 540, 1612, 544, 532, 544, 532, 544, 532, 544, 556, 540, 512, 540, 532, 572, 504, 544, 532, 544, 536, 564, 508, 568, 1584, 544, 532, 544, 528, 572, 1580, 548, 1604, 544, 532, 572};

unsigned int signal1 = 10;
unsigned int signal2 = 210;
unsigned int signal3 = 410;
unsigned int signal4 = 610;
unsigned int incremento = 0;

void setup()
{
  Serial.begin(9600);
  irsend.enableIROut(khz);
  delay(1000);
  Serial.println(F("AnalysIR"));
  pinMode(13, OUTPUT);

 // if (!strcmp(nomeRicettore, "Condizionatore Sala"))
    incremento =11000;
//  if (!strcmp(nomeRicettore, "Condizioantore Camera Sud"))
//    incremento =21000;
//  if (!strcmp(nomeRicettore, "Condizioantore Camera Sud"))
//    incremento =31000;
//  if (!strcmp(nomeRicettore, "Stufa Bagno"))
//    incremento =41000;    
  
  signal1 = signal1 + incremento;
  signal2 = signal2 + incremento;
  signal3 = signal3 + incremento;
  signal4 = signal4 + incremento;
  
  mySwitch.enableReceive(0);  // Receiver on inerrupt 0 => that is pin #2

  Serial.println(F("singal1: "));
  Serial.println(signal1);
  Serial.println(F("incremento: "));
  Serial.println(incremento);    
}

void loop()
{  
  if (mySwitch.available())
  {  
    int value = mySwitch.getReceivedValue();
    
    if (value == 0)
      Serial.println("Unknown encoding");
    else
    {  
      Serial.print(F("Received "));
      Serial.println( mySwitch.getReceivedValue() );
//      Serial.print(" / ");
//      Serial.println( mySwitch.getReceivedBitlength() );

      if(value == signal1)
        eseguiIR_1();
//      if(value == signal2)
//        eseguiIR_2();
//      if(value == signal3)
//        eseguiIR_3();
      if(value == signal4)
       eseguiIR_4();
    }
    mySwitch.resetAvailable();
  }
}

void eseguiIR_1()
{
  digitalWrite(13, HIGH);
  
  irsend.sendRaw(segnaleIR_1, sizeof(segnaleIR_1)/sizeof(int), khz); //AnalysIR Batch Export (IRremote) - RAW

  delay(1000);
  digitalWrite(13, LOW);
  delay(4000);
}

//void eseguiIR_2()
//{
//  digitalWrite(13, HIGH);
//  
//  irsend.sendRaw(segnaleIR_2, sizeof(segnaleIR_2)/sizeof(int), khz); //AnalysIR Batch Export (IRremote) - RAW
//
//  delay(2000);
//  digitalWrite(13, LOW);
//  delay(3000);
//}
//
//void eseguiIR_3()
//{
//  digitalWrite(13, HIGH);
//  
//  irsend.sendRaw(segnaleIR_3, sizeof(segnaleIR_3)/sizeof(int), khz); //AnalysIR Batch Export (IRremote) - RAW
//
//  delay(3000);
//  digitalWrite(13, LOW);
//  delay(2000);
//}
//
void eseguiIR_4()
{
  digitalWrite(13, HIGH);
  
  irsend.sendRaw(segnaleIR_4, sizeof(segnaleIR_4)/sizeof(int), khz); //AnalysIR Batch Export (IRremote) - RAW

  delay(4000);
  digitalWrite(13, LOW);
  delay(1000);
}
